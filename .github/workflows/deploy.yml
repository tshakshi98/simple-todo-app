name: Deploy Simple To-Do App to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up AWS CLI
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    # Step 3: Deploy to Elastic Beanstalk
    - name: Deploy Application to Elastic Beanstalk
      run: |
        APPLICATION_NAME="SimpleTodoApp"
        ENVIRONMENT_NAME="SimpleTodoEnv"
        S3_BUCKET_NAME="simple-todo-app-bucket-shakshi-1"

        # Create a zip file of the application
        echo "Zipping application files..."
        zip -r app.zip .

        # Create S3 bucket if it doesn't exist
        if ! aws s3api head-bucket --bucket $S3_BUCKET_NAME 2>/dev/null; then
          echo "Creating S3 bucket: $S3_BUCKET_NAME"
          aws s3 mb s3://$S3_BUCKET_NAME --region ap-south-1
        fi

        # Upload application to S3
        echo "Uploading application to S3..."
        aws s3 cp app.zip s3://$S3_BUCKET_NAME/app.zip

        # Create Application if it doesn't exist
        if ! aws elasticbeanstalk describe-applications --application-names "$APPLICATION_NAME" 2>/dev/null | grep -q "$APPLICATION_NAME"; then
          echo "Creating Elastic Beanstalk application..."
          aws elasticbeanstalk create-application --application-name "$APPLICATION_NAME"
        fi

        # Create Application Version
        VERSION_LABEL="v1-$(date +%s)"
        echo "Creating application version: $VERSION_LABEL"
        aws elasticbeanstalk create-application-version \
          --application-name "$APPLICATION_NAME" \
          --version-label "$VERSION_LABEL" \
          --source-bundle S3Bucket=$S3_BUCKET_NAME,S3Key=app.zip

        # Check if environment exists
        if ! aws elasticbeanstalk describe-environments --application-name "$APPLICATION_NAME" --environment-names "$ENVIRONMENT_NAME" 2>/dev/null | grep -q "$ENVIRONMENT_NAME"; then
          echo "Environment does not exist. Creating a new one..."
          aws elasticbeanstalk create-environment \
            --application-name "$APPLICATION_NAME" \
            --environment-name "$ENVIRONMENT_NAME" \
            --solution-stack-name "64bit Amazon Linux 2023 v4.5.0 running Python 3.11" \
            --version-label "$VERSION_LABEL"
        else
          echo "Updating existing environment..."
          aws elasticbeanstalk update-environment \
            --application-name "$APPLICATION_NAME" \
            --environment-name "$ENVIRONMENT_NAME" \
            --version-label "$VERSION_LABEL"
        fi
